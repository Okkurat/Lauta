{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lauta\\\\client\\\\lauta\\\\src\\\\ThreadHeader.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ThreadHeader(_ref) {\n  let {\n    Thread\n  } = _ref;\n  const formatDate = datesString => {\n    const datesArr = datesString.split(\"T\");\n    const dateArr = datesArr[0].split(\"-\");\n    const clockTime = datesArr[1].split(\".\");\n    const clockTimeNew = clockTime[0].replace(\":\", \".\");\n    const time = `${dateArr[2]}.${dateArr[1]}.${dateArr[0]} klo ${clockTimeNew}`;\n    return time;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postHeader\",\n      children: [Thread && Thread.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"threadTitle\",\n        children: Thread.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Anonymous \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatDate(Thread.created_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `http://localhost:3000/${Thread.ID}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Thread.ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postText\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Thread.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = ThreadHeader;\nexport default ThreadHeader;\nvar _c;\n$RefreshReg$(_c, \"ThreadHeader\");","map":{"version":3,"names":["React","useParams","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ThreadHeader","_ref","Thread","formatDate","datesString","datesArr","split","dateArr","clockTime","clockTimeNew","replace","time","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","created_at","href","ID","text","_c","$RefreshReg$"],"sources":["D:/Lauta/client/lauta/src/ThreadHeader.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport './App.css';\r\n\r\nfunction ThreadHeader({Thread}) {\r\n\r\nconst formatDate = (datesString) => {\r\n    const datesArr = datesString.split(\"T\")\r\n    const dateArr =  datesArr[0].split(\"-\")\r\n    const clockTime = datesArr[1].split(\".\")\r\n    const clockTimeNew = clockTime[0].replace(\":\", \".\")\r\n    const time = `${dateArr[2]}.${dateArr[1]}.${dateArr[0]} klo ${clockTimeNew}`\r\n    return time\r\n}\r\n\r\n  return (\r\n    <>\r\n        <div className=\"postHeader\">\r\n        {Thread && Thread.title && (\r\n              <p className=\"threadTitle\">{Thread.title}</p>\r\n        )}\r\n        <p>Anonymous <span>{formatDate(Thread.created_at)}</span></p>\r\n        <a href={`http://localhost:3000/${Thread.ID}`}>\r\n          <span>No.</span>\r\n        </a>\r\n        <p>{Thread.ID}</p>\r\n        </div>\r\n        <div className=\"postText\">\r\n        <p>{Thread.text}</p>\r\n        </div>\r\n        </>\r\n      )\r\n}\r\n\r\nexport default ThreadHeader;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,YAAYA,CAAAC,IAAA,EAAW;EAAA,IAAV;IAACC;EAAM,CAAC,GAAAD,IAAA;EAE9B,MAAME,UAAU,GAAIC,WAAW,IAAK;IAChC,MAAMC,QAAQ,GAAGD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC;IACvC,MAAMC,OAAO,GAAIF,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACvC,MAAME,SAAS,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACxC,MAAMG,YAAY,GAAGD,SAAS,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACnD,MAAMC,IAAI,GAAI,GAAEJ,OAAO,CAAC,CAAC,CAAE,IAAGA,OAAO,CAAC,CAAC,CAAE,IAAGA,OAAO,CAAC,CAAC,CAAE,QAAOE,YAAa,EAAC;IAC5E,OAAOE,IAAI;EACf,CAAC;EAEC,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAD,QAAA,GAC1BV,MAAM,IAAIA,MAAM,CAACY,KAAK,iBACjBjB,OAAA;QAAGgB,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAEV,MAAM,CAACY;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C,eACDrB,OAAA;QAAAe,QAAA,GAAG,YAAU,eAAAf,OAAA;UAAAe,QAAA,EAAOT,UAAU,CAACD,MAAM,CAACiB,UAAU;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC7DrB,OAAA;QAAGuB,IAAI,EAAG,yBAAwBlB,MAAM,CAACmB,EAAG,EAAE;QAAAT,QAAA,eAC5Cf,OAAA;UAAAe,QAAA,EAAM;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd,eACJrB,OAAA;QAAAe,QAAA,EAAIV,MAAM,CAACmB;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACZ,eACNrB,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAAAD,QAAA,eACzBf,OAAA;QAAAe,QAAA,EAAIV,MAAM,CAACoB;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd;EAAA,gBACH;AAEX;AAACK,EAAA,GA5BQvB,YAAY;AA8BrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}