{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lauta\\\\client\\\\lauta\\\\src\\\\Thread.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Thread() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [Thread, seThread] = useState(\"\");\n  function test() {\n    console.log(Thread);\n  }\n  useEffect(() => {\n    fetch(`http://localhost:4000/thread/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => seThread(data)).catch(error => console.log(404));\n  }, []);\n  test();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Thread \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This is the thread page for thread \", id, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Thread, \"w8w/LPNnWAq4FyzA69h41igjwCk=\", false, function () {\n  return [useParams];\n});\n_c = Thread;\nexport default Thread;\nvar _c;\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["React","useParams","useState","useEffect","jsxDEV","_jsxDEV","Thread","_s","id","seThread","test","console","log","fetch","then","response","ok","Error","status","json","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Lauta/client/lauta/src/Thread.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\"\r\n\r\n\r\nfunction Thread() {\r\n    const { id } = useParams();\r\n    const [Thread, seThread] = useState(\"\")\r\n\r\n    function test(){\r\n        console.log(Thread)\r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tfetch(`http://localhost:4000/thread/${id}`)\r\n\t\t\t.then(response => {\r\n                if(!response.ok) {\r\n                    throw new Error(`HTTP error: ${response.status}`)\r\n                }\r\n                return response.json()\r\n            })\r\n\t\t\t.then(data => seThread(data))\r\n\t\t\t.catch(error => console.log(404))\r\n\t}, [])\r\n\r\n    test()\r\n\r\n    return (\r\n    <div>\r\n        <h1>Thread {id}</h1>\r\n        <p>This is the thread page for thread {id}.</p>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Thread;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,EAAE;EAC1B,MAAM,CAACK,MAAM,EAAEG,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEvC,SAASQ,IAAIA,CAAA,EAAE;IACXC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACvB;EAEAH,SAAS,CAAC,MAAM;IAClBU,KAAK,CAAE,gCAA+BL,EAAG,EAAC,CAAC,CACzCM,IAAI,CAACC,QAAQ,IAAI;MACL,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAE;QACb,MAAM,IAAIC,KAAK,CAAE,eAAcF,QAAQ,CAACG,MAAO,EAAC,CAAC;MACrD;MACA,OAAOH,QAAQ,CAACI,IAAI,EAAE;IAC1B,CAAC,CAAC,CACVL,IAAI,CAACM,IAAI,IAAIX,QAAQ,CAACW,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIX,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEHF,IAAI,EAAE;EAEN,oBACAL,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,GAAI,SAAO,EAACf,EAAE;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACpBtB,OAAA;MAAAkB,QAAA,GAAG,qCAAmC,EAACf,EAAE,EAAC,GAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7C;AAEV;AAACpB,EAAA,CA5BQD,MAAM;EAAA,QACIL,SAAS;AAAA;AAAA2B,EAAA,GADnBtB,MAAM;AA8Bf,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}