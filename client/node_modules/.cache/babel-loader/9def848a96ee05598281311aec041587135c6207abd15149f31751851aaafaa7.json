{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lauta\\\\client\\\\lauta\\\\src\\\\Thread.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Thread() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [Thread, setThread] = useState(null);\n  const [error, setError] = useState(null);\n  function test() {}\n  useEffect(() => {\n    fetch(`http://localhost:4000/thread/${id}`).then(response => response.json()).then(data => {\n      setThread(data);\n      test();\n    }).catch(error => console.error(error));\n  }, [id]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NEEKERI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Thread \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), Thread ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: Thread.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Thread.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"404 Thread not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Thread, \"9dK6tj01zL4sB7hZz/ypIyYBbRc=\", false, function () {\n  return [useParams];\n});\n_c = Thread;\nexport default Thread;\nvar _c;\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["React","useParams","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Thread","_s","id","setThread","error","setError","test","fetch","then","response","json","data","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","text","_c","$RefreshReg$"],"sources":["D:/Lauta/client/lauta/src/Thread.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\"\r\n\r\nfunction Thread() {\r\n    const { id } = useParams();\r\n    const [Thread, setThread] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    function test() {\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:4000/thread/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setThread(data);\r\n                test();\r\n            })\r\n            .catch(error => console.error(error));\r\n    }, [id]);\r\n\r\n    if (error) {\r\n        return <p>NEEKERI</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Thread {id}</h1>\r\n            {Thread ? (\r\n                <>\r\n                    <h2>{Thread.title}</h2>\r\n                    <p>{Thread.text}</p>\r\n                </>\r\n            ) : \r\n                <>\r\n                    <h2>404 Thread not found</h2>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Thread;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,EAAE;EAC1B,MAAM,CAACO,MAAM,EAAEG,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,SAASY,IAAIA,CAAA,EAAG,CAChB;EAEAX,SAAS,CAAC,MAAM;IACZY,KAAK,CAAE,gCAA+BL,EAAG,EAAC,CAAC,CACtCM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVR,SAAS,CAACQ,IAAI,CAAC;MACfL,IAAI,EAAE;IACV,CAAC,CAAC,CACDM,KAAK,CAACR,KAAK,IAAIS,OAAO,CAACT,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACF,EAAE,CAAC,CAAC;EAER,IAAIE,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAiB,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EACzB;EAEA,oBACIrB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,GAAI,SAAO,EAACZ,EAAE;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EACnBlB,MAAM,gBACHH,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACIjB,OAAA;QAAAiB,QAAA,EAAKd,MAAM,CAACmB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACvBrB,OAAA;QAAAiB,QAAA,EAAId,MAAM,CAACoB;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,gBACrB,gBAEHrB,OAAA,CAAAE,SAAA;MAAAe,QAAA,eACIjB,OAAA;QAAAiB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK,iBAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEL;AAEd;AAACjB,EAAA,CArCQD,MAAM;EAAA,QACIP,SAAS;AAAA;AAAA4B,EAAA,GADnBrB,MAAM;AAuCf,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}