{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lauta\\\\client\\\\lauta\\\\src\\\\Thread.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './App.css';\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Thread() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [Thread, setThread] = useState(null);\n  const [spinner, setSpinner] = useState(false);\n  useEffect(() => {\n    setSpinner(true);\n    fetch(`http://localhost:4000/thread/${id}`).then(response => response.json()).then(data => {\n      setSpinner(false);\n      console.log(data);\n      if (data.message === \"404\") {\n        return;\n      }\n      setThread(data);\n    }).catch(error => console.error(error));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: spinner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Spinning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : Thread ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: Thread.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Thread.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"404 Thread not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Thread, \"D6gKccMr90p9tI89svzJdnW4io8=\", false, function () {\n  return [useParams];\n});\n_c = Thread;\nexport default Thread;\nvar _c;\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["React","useParams","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Thread","_s","id","setThread","spinner","setSpinner","fetch","then","response","json","data","console","log","message","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","text","_c","$RefreshReg$"],"sources":["D:/Lauta/client/lauta/src/Thread.js"],"sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\"\r\n\r\nfunction Thread() {\r\n    const { id } = useParams();\r\n    const [Thread, setThread] = useState(null);\r\n    const [spinner, setSpinner] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setSpinner(true)\r\n\r\n        fetch(`http://localhost:4000/thread/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setSpinner(false)\r\n                console.log(data)\r\n                if(data.message === \"404\")\r\n                {\r\n                    return\r\n                }\r\n                setThread(data);\r\n            })\r\n            .catch(error => console.error(error));\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            {spinner ? (\r\n                <div className=\"spinner\">Spinning</div>\r\n            ) : Thread ? (\r\n                <>\r\n                    <h2>{Thread.title}</h2>\r\n                    <p>{Thread.text}</p>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h2>404 Thread not found</h2>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Thread;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,EAAE;EAC1B,MAAM,CAACO,MAAM,EAAEG,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAG7CC,SAAS,CAAC,MAAM;IAEZU,UAAU,CAAC,IAAI,CAAC;IAEhBC,KAAK,CAAE,gCAA+BJ,EAAG,EAAC,CAAC,CACtCK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVL,UAAU,CAAC,KAAK,CAAC;MACjBM,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAGA,IAAI,CAACG,OAAO,KAAK,KAAK,EACzB;QACI;MACJ;MACAV,SAAS,CAACO,IAAI,CAAC;IACnB,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACb,EAAE,CAAC,CAAC;EAER,oBACIL,OAAA;IAAAmB,QAAA,EACKZ,OAAO,gBACJP,OAAA;MAAKoB,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,GACvCrB,MAAM,gBACNH,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACInB,OAAA;QAAAmB,QAAA,EAAKhB,MAAM,CAACsB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACvBxB,OAAA;QAAAmB,QAAA,EAAIhB,MAAM,CAACuB;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,gBACrB,gBAEHxB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,eACInB,OAAA;QAAAmB,QAAA,EAAI;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;EAEpC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd;AAACpB,EAAA,CAxCQD,MAAM;EAAA,QACIP,SAAS;AAAA;AAAA+B,EAAA,GADnBxB,MAAM;AA0Cf,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}