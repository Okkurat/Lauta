{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lauta\\\\client\\\\lauta\\\\src\\\\ThreadMaker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreadMaker() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  async function handleThread(e) {\n    e.preventDefault();\n    if (!text.trim()) {\n      setError(\"Both title and text must be provided.\");\n      return;\n    }\n    setError(\"\");\n    fetch(\"http://localhost:4000/thread\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        text: text\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ThreadMaker\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleThread,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        name: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Post text\",\n        name: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ThreadMaker, \"guBTw7Qp+MMS5Nz8mLwSTRWc05A=\");\n_c = ThreadMaker;\nexport default ThreadMaker;\nvar _c;\n$RefreshReg$(_c, \"ThreadMaker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ThreadMaker","_s","title","setTitle","text","setText","error","setError","handleThread","e","preventDefault","trim","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","className","children","onSubmit","type","placeholder","name","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Lauta/client/lauta/src/ThreadMaker.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ThreadMaker() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  async function handleThread(e) {\r\n    e.preventDefault();\r\n\r\n    if(!text.trim()){\r\n        setError(\"Both title and text must be provided.\");\r\n        return;\r\n    }\r\n    setError(\"\");\r\n\r\n    fetch(\"http://localhost:4000/thread\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ \r\n                            title: title,\r\n                            text: text\r\n                            })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => console.log(data))\r\n    .catch(error => console.error(error))\r\n  }\r\n\r\n  return (\r\n    <div className=\"ThreadMaker\">\r\n      <form onSubmit={handleThread}>\r\n        <input type=\"text\" placeholder=\"Title\" name=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Post text\" name=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\r\n        <button type=\"submit\">Post Thread</button>\r\n      </form>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThreadMaker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,eAAeW,YAAYA,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAG,CAACN,IAAI,CAACO,IAAI,EAAE,EAAC;MACZJ,QAAQ,CAAC,uCAAuC,CAAC;MACjD;IACJ;IACAA,QAAQ,CAAC,EAAE,CAAC;IAEZK,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACCf,KAAK,EAAEA,KAAK;QACZE,IAAI,EAAEA;MACN,CAAC;IACzB,CAAC,CAAC,CACDc,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAAClB,KAAK,IAAIgB,OAAO,CAAChB,KAAK,CAACA,KAAK,CAAC,CAAC;EACvC;EAEA,oBACEP,OAAA;IAAK0B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B3B,OAAA;MAAM4B,QAAQ,EAAEnB,YAAa;MAAAkB,QAAA,gBAC3B3B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,OAAO;QAACC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAE7B,KAAM;QAAC8B,QAAQ,EAAGvB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACwB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC/GtC,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,WAAW;QAACC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE3B,IAAK;QAAC4B,QAAQ,EAAGvB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAChHtC,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrC,EACN/B,KAAK,iBAAIP,OAAA;MAAG0B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEpB;IAAK;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9C;AAEV;AAACpC,EAAA,CAvCQD,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}