{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lauta\\\\client\\\\lauta\\\\src\\\\PostHeader.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport PostReply from \"./PostReply\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostHeader(_ref) {\n  let {\n    Thread,\n    showButton,\n    ButtonOnClick\n  } = _ref;\n  const formatDate = datesString => {\n    const datesArr = datesString.split(\"T\");\n    const dateArr = datesArr[0].split(\"-\");\n    const clockTime = datesArr[1].split(\".\");\n    const clockTimeNew = clockTime[0].replace(\":\", \".\");\n    const time = `${dateArr[2]}.${dateArr[1]}.${dateArr[0]} klo ${clockTimeNew}`;\n    return time;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `http://localhost:3000/${Thread.ID}`,\n        children: [Thread && Thread.title && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"threadTitle\",\n          children: Thread.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Anonymous \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatDate(Thread.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), showButton ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"replyButton\",\n        onClick: BunttonOnClick,\n        children: Thread.ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `http://localhost:3000/${Thread.ID}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: Thread.ID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postText\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Thread.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = PostHeader;\nexport default PostHeader;\nvar _c;\n$RefreshReg$(_c, \"PostHeader\");","map":{"version":3,"names":["React","PostReply","jsxDEV","_jsxDEV","Fragment","_Fragment","PostHeader","_ref","Thread","showButton","ButtonOnClick","formatDate","datesString","datesArr","split","dateArr","clockTime","clockTimeNew","replace","time","children","className","href","ID","title","fileName","_jsxFileName","lineNumber","columnNumber","created_at","onClick","BunttonOnClick","text","_c","$RefreshReg$"],"sources":["D:/Lauta/client/lauta/src/PostHeader.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport PostReply from \"./PostReply\";\r\n\r\nfunction PostHeader({ Thread, showButton, ButtonOnClick }) {\r\n  const formatDate = (datesString) => {\r\n    const datesArr = datesString.split(\"T\");\r\n    const dateArr = datesArr[0].split(\"-\");\r\n    const clockTime = datesArr[1].split(\".\");\r\n    const clockTimeNew = clockTime[0].replace(\":\", \".\");\r\n    const time = `${dateArr[2]}.${dateArr[1]}.${dateArr[0]} klo ${clockTimeNew}`;\r\n    return time;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postHeader\">\r\n        <a href={`http://localhost:3000/${Thread.ID}`}>\r\n          {Thread && Thread.title && (\r\n            <p className=\"threadTitle\">{Thread.title}</p>\r\n          )}\r\n          <p>\r\n            Anonymous <span>{formatDate(Thread.created_at)}</span>\r\n          </p>\r\n          <span>No.</span>\r\n        </a>\r\n        {showButton ? (\r\n          <p className=\"replyButton\" onClick={BunttonOnClick}>{Thread.ID}</p>\r\n        ) : (\r\n          <a href={`http://localhost:3000/${Thread.ID}`}>\r\n            <p>{Thread.ID}</p>\r\n          </a>\r\n        )}\r\n      </div>\r\n      <div className=\"postText\">\r\n        <p>{Thread.text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostHeader;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,UAAUA,CAAAC,IAAA,EAAwC;EAAA,IAAvC;IAAEC,MAAM;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAH,IAAA;EACvD,MAAMI,UAAU,GAAIC,WAAW,IAAK;IAClC,MAAMC,QAAQ,GAAGD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC;IACvC,MAAMC,OAAO,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACtC,MAAME,SAAS,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACxC,MAAMG,YAAY,GAAGD,SAAS,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACnD,MAAMC,IAAI,GAAI,GAAEJ,OAAO,CAAC,CAAC,CAAE,IAAGA,OAAO,CAAC,CAAC,CAAE,IAAGA,OAAO,CAAC,CAAC,CAAE,QAAOE,YAAa,EAAC;IAC5E,OAAOE,IAAI;EACb,CAAC;EAED,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACzBjB,OAAA;QAAGmB,IAAI,EAAG,yBAAwBd,MAAM,CAACe,EAAG,EAAE;QAAAH,QAAA,GAC3CZ,MAAM,IAAIA,MAAM,CAACgB,KAAK,iBACrBrB,OAAA;UAAGkB,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAEZ,MAAM,CAACgB;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACzC,eACDzB,OAAA;UAAAiB,QAAA,GAAG,YACS,eAAAjB,OAAA;YAAAiB,QAAA,EAAOT,UAAU,CAACH,MAAM,CAACqB,UAAU;UAAC;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACpD,eACJzB,OAAA;UAAAiB,QAAA,EAAM;QAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd,EACHnB,UAAU,gBACTN,OAAA;QAAGkB,SAAS,EAAC,aAAa;QAACS,OAAO,EAAEC,cAAe;QAAAX,QAAA,EAAEZ,MAAM,CAACe;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,gBAEnEzB,OAAA;QAAGmB,IAAI,EAAG,yBAAwBd,MAAM,CAACe,EAAG,EAAE;QAAAH,QAAA,eAC5CjB,OAAA;UAAAiB,QAAA,EAAIZ,MAAM,CAACe;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAErB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG,eACNzB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAD,QAAA,eACvBjB,OAAA;QAAAiB,QAAA,EAAIZ,MAAM,CAACwB;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB;EAAA,gBACL;AAEP;AAACK,EAAA,GAnCQ3B,UAAU;AAqCnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}