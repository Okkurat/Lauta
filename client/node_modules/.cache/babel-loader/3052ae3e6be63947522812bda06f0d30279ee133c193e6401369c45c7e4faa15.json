{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lauta\\\\client\\\\lauta\\\\src\\\\Thread.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport './Thread.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Thread() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [Thread, setThread] = useState(null);\n  const [spinner, setSpinner] = useState(false);\n  useEffect(() => {\n    setSpinner(true);\n    fetch(`http://localhost:4000/thread/${id}`).then(response => response.json()).then(data => {\n      setSpinner(false);\n      console.log(data);\n      if (data.message === \"404\") {\n        return;\n      }\n      setThread(data);\n    }).catch(error => console.error(error));\n  }, [id]);\n  const formatDate = dateString => {\n    const dateArr = dateString.split(\"T\");\n    return \"..:\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: spinner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : Thread ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"OP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [Thread.ID, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", formatDate(Thread.created_at)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Thread.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Thread.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"404 Thread not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Thread, \"D6gKccMr90p9tI89svzJdnW4io8=\", false, function () {\n  return [useParams];\n});\n_c = Thread;\nexport default Thread;\nvar _c;\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["React","useParams","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Thread","_s","id","setThread","spinner","setSpinner","fetch","then","response","json","data","console","log","message","catch","error","formatDate","dateString","dateArr","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ID","created_at","title","text","_c","$RefreshReg$"],"sources":["D:/Lauta/client/lauta/src/Thread.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport './Thread.css';\r\n\r\nfunction Thread() {\r\n  const { id } = useParams();\r\n  const [Thread, setThread] = useState(null);\r\n  const [spinner, setSpinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setSpinner(true);\r\n    fetch(`http://localhost:4000/thread/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setSpinner(false);\r\n        console.log(data);\r\n        if (data.message === \"404\") {\r\n          return;\r\n        }\r\n        setThread(data);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, [id]);\r\n\r\nconst formatDate = (dateString) => {\r\n    const dateArr = dateString.split(\"T\")\r\n    return \"..:\"\r\n};\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {spinner ? (\r\n        <div className=\"spinner\"></div>\r\n      ) : Thread ? (\r\n        <>\r\n        <p>OP</p>\r\n        <p>{Thread.ID}<span> {formatDate(Thread.created_at)}</span></p>\r\n        <p>{Thread.title}</p>\r\n        <p>{Thread.text}</p>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>404 Thread not found</h2>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Thread;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,EAAE;EAC1B,MAAM,CAACO,MAAM,EAAEG,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,IAAI,CAAC;IAChBC,KAAK,CAAE,gCAA+BJ,EAAG,EAAC,CAAC,CACxCK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,UAAU,CAAC,KAAK,CAAC;MACjBM,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAIA,IAAI,CAACG,OAAO,KAAK,KAAK,EAAE;QAC1B;MACF;MACAV,SAAS,CAACO,IAAI,CAAC;IACjB,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACb,EAAE,CAAC,CAAC;EAEV,MAAMc,UAAU,GAAIC,UAAU,IAAK;IAC/B,MAAMC,OAAO,GAAGD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC;IACrC,OAAO,KAAK;EAChB,CAAC;EAEC,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBjB,OAAO,gBACNP,OAAA;MAAKuB,SAAS,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,GAC7BzB,MAAM,gBACRH,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACAxB,OAAA;QAAAwB,QAAA,EAAG;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACT5B,OAAA;QAAAwB,QAAA,GAAIrB,MAAM,CAAC0B,EAAE,eAAC7B,OAAA;UAAAwB,QAAA,GAAM,GAAC,EAACL,UAAU,CAAChB,MAAM,CAAC2B,UAAU,CAAC;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC/D5B,OAAA;QAAAwB,QAAA,EAAIrB,MAAM,CAAC4B;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACrB5B,OAAA;QAAAwB,QAAA,EAAIrB,MAAM,CAAC6B;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,gBACjB,gBAEH5B,OAAA,CAAAE,SAAA;MAAAsB,QAAA,eACExB,OAAA;QAAAwB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;EAEhC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAACxB,EAAA,CA3CQD,MAAM;EAAA,QACEP,SAAS;AAAA;AAAAqC,EAAA,GADjB9B,MAAM;AA6Cf,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}